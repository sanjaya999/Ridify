version: "3.8"

services:
  database:
    image: postgres:15
    container_name: ridify-db
    environment:
      POSTGRES_DB: ridify
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 2445
    ports:
      - "5432:5432"  # Fixed: use standard port
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - ridify_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d ridify"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  backend:  # Fixed: added proper indentation
    image: rentthis-backend:latest
    container_name: rentthis-backend
    environment:
      # Database configuration - Fixed to match your database service
      DATABASE_URL: jdbc:postgresql://database:5432/ridify
      DATABASE_USERNAME: postgres
      DATABASE_PASSWORD: 2445
      
      # JWT configuration
      JWT_ACCESS_SECRET: ${JWT_ACCESS_SECRET}
      ACCESS_EXPIRY: ${ACCESS_EXPIRY}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET}
      REFRESH_EXPIRY: ${REFRESH_EXPIRY}
      
      # Khalti payment configuration
      KHALTI_SECRET: ${KHALTI_SECRET}
      KHATLTI_PUBLIC: ${KHATLTI_PUBLIC}
      KHALTI_CALLBACK: ${KHALTI_CALLBACK}
      
      SPRING_PROFILES_ACTIVE: prod
    ports:
      - "8080:8080"
    volumes:
      - uploads_data:/app/uploads
    depends_on:
      database:  # Fixed: should depend on 'database' service
        condition: service_healthy
    networks:
      - ridify_network  # Fixed: use same network name

  frontend:
    image: rentthis-frontend:latest
    container_name: rentthis-frontend
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - ridify_network  # Fixed: use same network name

volumes:
  postgres_data:
  uploads_data:

networks:
  ridify_network:  # Fixed: consistent network name
    driver: bridge